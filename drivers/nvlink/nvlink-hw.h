/*
 * nvlink-hw.h:
 * This header contains register definitions and HW related macros for the
 * NVLINK driver stack.
 *
 * Copyright (c) 2017, NVIDIA CORPORATION.  All rights reserved.
 *
 * This program is free software; you can redistribute it and/or modify it
 * under the terms and conditions of the GNU General Public License,
 * version 2, as published by the Free Software Foundation.
 *
 * This program is distributed in the hope it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
 * more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

#ifndef NVLINK_REGS_H
#define NVLINK_REGS_H

/* NVLINK APERTURES - START */


/* TIOCTRL MACROS */
/* TODO: Confirm this delay is correct for Tegra */
#define NVLW_POST_RESET_DELAY_US				8

/* TIOCTRL Registers */
#define NVLW_RESET						0x140
#define NVLW_RESET_LINKRESET					8

#define NVLW_DEBUG_RESET					0x144
#define NVLW_DEBUG_RESET_LINK					0
#define NVLW_DEBUG_RESET_COMMON					31


/* MINION Registers */
#define CMINION_FALCON_IRQSCLR					0x4

#define CMINION_FALCON_IRQSTAT					0x8
#define CMINION_FALCON_IRQSTAT_WDTMR				1
#define CMINION_FALCON_IRQSTAT_HALT				4
#define CMINION_FALCON_IRQSTAT_EXTERR				5
#define CMINION_FALCON_IRQSTAT_SWGEN0				6
#define CMINION_FALCON_IRQSTAT_SWGEN1				7

#define CMINION_FALCON_IRQDEST					0x1c

#define CMINION_FALCON_MAILBOX1					0x44

#define CMINION_FALCON_OS					0x80
#define CMINION_FALCON_OS_MINOR_VER_MASK			0xffff
#define CMINION_FALCON_OS_MINOR_VER_SHIFT			0
#define CMINION_FALCON_OS_MAJOR_VER_MASK			0xffff0000
#define CMINION_FALCON_OS_MAJOR_VER_SHIFT			16

#define CMINION_FALCON_CPUCTL					0x100
#define CMINION_FALCON_CPUCTL_STARTCPU				1

#define CMINION_FALCON_BOOTVEC					0x104

#define CMINION_FALCON_DMACTL					0x10c
#define CMINION_FALCON_DMACTL_DMEM_SCRUBBING			1
#define CMINION_FALCON_DMACTL_IMEM_SCRUBBING			2

#define CMINION_FALCON_IMEMC					0x180
#define CMINION_FALCON_IMEMC_BLK_MASK				0xff00
#define CMINION_FALCON_IMEMC_BLK_SHIFT				8
#define CMINION_FALCON_IMEMC_AINCW				24
#define CMINION_FALCON_IMEMC_AINCR				25
#define CMINION_FALCON_IMEMC_SECURE				28

#define CMINION_FALCON_IMEMD					0x184

#define CMINION_FALCON_IMEMT					0x188

#define CMINION_FALCON_DMEMC					0x1c0
#define CMINION_FALCON_DMEMC_AINCR				25
#define CMINION_FALCON_DMEMC_BLK_MASK				0xff00
#define CMINION_FALCON_DMEMC_BLK_SHIFT				8
#define CMINION_FALCON_DMEMC_AINCW				24

#define CMINION_FALCON_DMEMD					0x1c4

#define CMINION_FALCON_SCTL					0x240

#define MINION_MINION_STATUS					0x830
#define MINION_MINION_STATUS_STATUS_MASK			0xff
#define MINION_MINION_STATUS_STATUS_SHIFT			0
#define MINION_MINION_STATUS_STATUS_INIT			0
#define MINION_MINION_STATUS_STATUS_BOOT			1

#define MINION_MISC						0x8b0

#define MINION_NVLINK_DL_CMD					0x900
#define MINION_NVLINK_DL_CMD_COMMAND_MASK			0xff
#define MINION_NVLINK_DL_CMD_COMMAND_SHIFT			0
#define MINION_NVLINK_DL_CMD_COMMAND_NOP			0
#define MINION_NVLINK_DL_CMD_COMMAND_INITPHY			1
#define MINION_NVLINK_DL_CMD_COMMAND_SWINTR			2
#define MINION_NVLINK_DL_CMD_COMMAND_INITLANEENABLE		3
#define MINION_NVLINK_DL_CMD_COMMAND_INITDLPL			4
#define MINION_NVLINK_DL_CMD_COMMAND_LANEDISABLE		8
#define MINION_NVLINK_DL_CMD_COMMAND_FASTLANEDISABLE		9
#define MINION_NVLINK_DL_CMD_COMMAND_SETACMODE			10
#define MINION_NVLINK_DL_CMD_COMMAND_CLRACMODE			11
#define MINION_NVLINK_DL_CMD_COMMAND_ENABLEPM			16
#define MINION_NVLINK_DL_CMD_COMMAND_DISABLEPM			17
#define MINION_NVLINK_DL_CMD_COMMAND_SAVESTATE			24
#define MINION_NVLINK_DL_CMD_COMMAND_RESTORESTATE		25
#define MINION_NVLINK_DL_CMD_COMMAND_INITPLL_0			32
#define MINION_NVLINK_DL_CMD_COMMAND_INITPLL_1			33
#define MINION_NVLINK_DL_CMD_COMMAND_INITPLL_2			34
#define MINION_NVLINK_DL_CMD_COMMAND_INITPLL_3			35
#define MINION_NVLINK_DL_CMD_COMMAND_INITPLL_4			36
#define MINION_NVLINK_DL_CMD_COMMAND_INITPLL_5			37
#define MINION_NVLINK_DL_CMD_COMMAND_INITPLL_6			38
#define MINION_NVLINK_DL_CMD_COMMAND_INITPLL_7			39
#define MINION_NVLINK_DL_CMD_COMMAND_CONFIGEOM			64
#define MINION_NVLINK_DL_CMD_COMMAND_XAVIER_PLLOVERRIDE_ON	80
#define MINION_NVLINK_DL_CMD_COMMAND_XAVIER_PLLOVERRIDE_OFF	81
#define MINION_NVLINK_DL_CMD_COMMAND_XAVIER_CALIBRATEPLL	82
#define MINION_NVLINK_DL_CMD_COMMAND_ALWAYSFAULT		255
#define MINION_NVLINK_DL_CMD_FAULT				30
#define MINION_NVLINK_DL_CMD_READY				31

#define MINION_NVLINK_LINK_INTR					0xa00
#define MINION_NVLINK_LINK_INTR_CODE_MASK			0xff
#define MINION_NVLINK_LINK_INTR_CODE_SHIFT			0
#define MINION_NVLINK_LINK_INTR_CODE_NA				0
#define MINION_NVLINK_LINK_INTR_CODE_SWREQ			1
#define MINION_NVLINK_LINK_INTR_CODE_DLREQ			2
#define MINION_NVLINK_LINK_INTR_CODE_PMDISABLED			3
#define MINION_NVLINK_LINK_INTR_CODE_DLCMDFAULT			4
#define MINION_NVLINK_LINK_INTR_CODE_NOINIT			16
#define MINION_NVLINK_LINK_INTR_CODE_BADINIT			32
#define MINION_NVLINK_LINK_INTR_CODE_PMFAIL			33


/* NVL Registers */
#define NVL_LINK_STATE						0x0
#define NVL_LINK_STATE_STATE_MASK				0xff
#define NVL_LINK_STATE_STATE_SHIFT				0
#define NVL_LINK_STATE_STATE_INIT				0
#define NVL_LINK_STATE_STATE_HWCFG				1
#define NVL_LINK_STATE_STATE_SWCFG				2
#define NVL_LINK_STATE_STATE_ACTIVE				3
#define NVL_LINK_STATE_STATE_FAULT				4
#define NVL_LINK_STATE_STATE_RCVY_AC				8
#define NVL_LINK_STATE_STATE_RCVY_SW				9
#define NVL_LINK_STATE_STATE_RCVY_RX				10

#define NVL_LINK_CONFIG						0x18
#define NVL_LINK_CONFIG_LINK_EN					31

#define NVL_LINK_CHANGE					0x40
#define NVL_LINK_CHANGE_ACTION_F(x)			(((x) & 0x3) << 2)
#define NVL_LINK_CHANGE_ACTION_LTSSM_CHANGE		1
#define NVL_LINK_CHANGE_ACTION_LTSSM_FORCE		3
#define NVL_LINK_CHANGE_NEWSTATE_F(x)			(((x) & 0xf) << 4)
#define NVL_LINK_CHANGE_NEWSTATE_INIT			0
#define NVL_LINK_CHANGE_NEWSTATE_HWCFG			1
#define NVL_LINK_CHANGE_NEWSTATE_SWCFG			2
#define NVL_LINK_CHANGE_NEWSTATE_ACTIVE			3
#define NVL_LINK_CHANGE_OLDSTATE_MASK_F(x)		(((x) & 0xf) << 16)
#define NVL_LINK_CHANGE_OLDSTATE_MASK_DONTCARE		0xf

#define NVL_SUBLINK_CHANGE				0x44
#define NVL_SUBLINK_CHANGE_STATUS_MASK			3
#define NVL_SUBLINK_CHANGE_STATUS_DONE			0
#define NVL_SUBLINK_CHANGE_STATUS_BUSY			1
#define NVL_SUBLINK_CHANGE_STATUS_FAULT			2
#define NVL_SUBLINK_CHANGE_STATUS_ABORT			3
#define NVL_SUBLINK_CHANGE_ACTION_F(x)			(((x) & 0x3) << 2)
#define NVL_SUBLINK_CHANGE_ACTION_SLSM_CHANGE		1
#define NVL_SUBLINK_CHANGE_ACTION_SLSM_FORCE		3
#define NVL_SUBLINK_CHANGE_NEWSTATE_F(x)		(((x) & 0xf) << 4)
#define NVL_SUBLINK_CHANGE_NEWSTATE_HS			0
#define NVL_SUBLINK_CHANGE_NEWSTATE_EIGHTH		4
#define NVL_SUBLINK_CHANGE_NEWSTATE_SAFE		6
#define NVL_SUBLINK_CHANGE_NEWSTATE_OFF			7
#define NVL_SUBLINK_CHANGE_SUBLINK_F(x)			(((x) & 0xf) << 12)
#define NVL_SUBLINK_CHANGE_SUBLINK_TX			0
#define NVL_SUBLINK_CHANGE_SUBLINK_RX			1

#define NVL_SL0_SAFE_CTRL2_TX					0x2008

#define NVL_SL0_TRAIN0_TX					0x2018

#define NVL_SL0_TRAIN1_TX					0x201c

#define NVL_SL1_CONFIG_RX					0x3000

#define NVL_SL1_SLSM_STATUS_RX					0x3014
#define NVL_SL1_SLSM_STATUS_RX_PRIMARY_STATE_MASK		0xf0
#define NVL_SL1_SLSM_STATUS_RX_PRIMARY_STATE_SHIFT		4
#define NVL_SL1_SLSM_STATUS_RX_PRIMARY_STATE_HS			0
#define NVL_SL1_SLSM_STATUS_RX_PRIMARY_STATE_EIGHTH		4
#define NVL_SL1_SLSM_STATUS_RX_PRIMARY_STATE_SAFE		6
#define NVL_SL1_SLSM_STATUS_RX_PRIMARY_STATE_OFF		7

#define NVL_SL0_SLSM_STATUS_TX					0x2024
#define NVL_SL0_SLSM_STATUS_TX_PRIMARY_STATE_MASK		0xf0
#define NVL_SL0_SLSM_STATUS_TX_PRIMARY_STATE_SHIFT		4
#define NVL_SL0_SLSM_STATUS_TX_PRIMARY_STATE_HS			0
#define NVL_SL0_SLSM_STATUS_TX_PRIMARY_STATE_EIGHTH		4
#define NVL_SL0_SLSM_STATUS_TX_PRIMARY_STATE_SAFE		6
#define NVL_SL0_SLSM_STATUS_TX_PRIMARY_STATE_OFF		7

#define NVL_TXIOBIST_CONFIG					0x2e10
#define NVL_TXIOBIST_CONFIG_DPG_PRBSSEEDLD			2

#define NVL_SL1_RXSLSM_TIMEOUT_2				0x3034


/* NVLTLC Registers */
#define NVLTLC_TX_CTRL_BUFFER_SZ_VC0				0x200

#define NVLTLC_TX_CTRL_BUFFER_SZ_VC1				0x204

#define NVLTLC_TX_CTRL_BUFFER_SZ_VC2				0x208

#define NVLTLC_TX_CTRL_BUFFER_SZ_VC3				0x20c

#define NVLTLC_TX_CTRL_BUFFER_SZ_VC4				0x210

#define NVLTLC_TX_CTRL_BUFFER_SZ_VC5				0x214

#define NVLTLC_TX_CTRL_BUFFER_SZ_VC6				0x218

#define NVLTLC_TX_CTRL_BUFFER_SZ_VC7				0x21c

#define NVLTLC_TX_CTRL_BUFFER_CREDITS_VC0			0x300

#define NVLTLC_TX_CTRL_BUFFER_CREDITS_VC1			0x304

#define NVLTLC_TX_CTRL_BUFFER_CREDITS_VC2			0x308

#define NVLTLC_TX_CTRL_BUFFER_CREDITS_VC3			0x30c

#define NVLTLC_TX_CTRL_BUFFER_CREDITS_VC4			0x310

#define NVLTLC_TX_CTRL_BUFFER_CREDITS_VC5			0x314

#define NVLTLC_TX_CTRL_BUFFER_CREDITS_VC6			0x318

#define NVLTLC_TX_CTRL_BUFFER_CREDITS_VC7			0x31c

#define NVLTLC_TX_CTRL_BUFFER_READY				0x400

#define NVLTLC_TX_ERR_LOG_EN_0					0x704

#define NVLTLC_TX_ERR_REPORT_EN_0				0x708

#define NVLTLC_TX_ERR_CONTAIN_EN_0				0x70c

#define NVLTLC_RX_CTRL_BUFFER_SZ_VC0				0xa00

#define NVLTLC_RX_CTRL_BUFFER_SZ_VC1				0xa04

#define NVLTLC_RX_CTRL_BUFFER_SZ_VC2				0xa08

#define NVLTLC_RX_CTRL_BUFFER_SZ_VC3				0xa0c

#define NVLTLC_RX_CTRL_BUFFER_SZ_VC4				0xa10

#define NVLTLC_RX_CTRL_BUFFER_SZ_VC5				0xa14

#define NVLTLC_RX_CTRL_BUFFER_SZ_VC6				0xa18

#define NVLTLC_RX_CTRL_BUFFER_SZ_VC7				0xa1c

#define NVLTLC_RX_CTRL_BUFFER_CREDITS_VC0			0xb00

#define NVLTLC_RX_CTRL_BUFFER_CREDITS_VC1			0xb04

#define NVLTLC_RX_CTRL_BUFFER_CREDITS_VC2			0xb08

#define NVLTLC_RX_CTRL_BUFFER_CREDITS_VC3			0xb0c

#define NVLTLC_RX_CTRL_BUFFER_CREDITS_VC4			0xb10

#define NVLTLC_RX_CTRL_BUFFER_CREDITS_VC5			0xb14

#define NVLTLC_RX_CTRL_BUFFER_CREDITS_VC6			0xb18

#define NVLTLC_RX_CTRL_BUFFER_CREDITS_VC7			0xb1c

#define NVLTLC_RX_CTRL_BUFFER_READY				0xc00

#define NVLTLC_RX_ERR_LOG_EN_0					0xf04

#define NVLTLC_RX_ERR_REPORT_EN_0				0xf08

#define NVLTLC_RX_ERR_CONTAIN_EN_0				0xf0c

#define NVLTLC_RX_ERR_LOG_EN_1					0xf1c

#define NVLTLC_RX_ERR_REPORT_EN_1				0xf20

#define NVLTLC_RX_ERR_CONTAIN_EN_1				0xf24


/* MSSNVLINK Registers */
#define MSSNVLINK_MASTER_CREDIT_TRANSINFO			0x10

#define MSSNVLINK_MASTER_CREDIT_INGR_DATA			0x14

#define MSSNVLINK_SLAVE_CREDIT_TRANSINFO			0x20

#define MSSNVLINK_SLAVE_CREDIT_INGR_DATA			0x24


/* NVLINK APERTURES - END */


/* NON-NVLINK APERTURES - START */


/*
 * TODO: Currently the MC driver is disabled for T194. Therefore we can't use
 * the MC driver's register read/write APIs (i.e. mc_writel()/mc_readl()). The
 * WAR for this is to introduce a temporary API to access MC registers. We're
 * using MCB_BASE for this WAR. Remove this WAR once the MC driver gets enabled
 * for T194.
 */
/* MC Registers */
#define MCB_BASE					0x2c10000


/* NON-NVLINK APERTURES - END */

#endif /* NVLINK_REGS_H */
