NVIDIA Tegra APE aux CPU, with communication via the "IVC" IPC protocol.

APE is an aux CPU which talks to CCPLEX over IVC.

Its assumed that the APE FW implements IVC, and uses HSP IRQs as part of IVC.
Its also assumed that the APE FW expects AST regions 0/1/2 are already set up
for the APE to access FW in DRAM, SYSRAM if applicable, and the IVC memory.

== APE top-level node ==

The APE core is represented by the top-level node including direct HW resources
such as clocks, resets etc.

Required properties:
- compatible: should be "nvidia,tegra186-ape-ivc" for T18x.
- reg: Address entries (APE BASE)
  Formatted as per standard rules for this property.
- nvidia,ast: APE AST0 and APE AST1 phandles
  For details refer: ../tegra-ast.txt
- #address-cells: Number of address cells in subnodes (ivc-channels).
  Should be set to <1>.
- #size-cells: Number of size cells in subnodes (ivc-channels).
  Should be set to <1>.
- clocks: Should contain an entry for each entry in clock-names.
  See ../clock/clock-bindings.txt for details.
- clock-names: Names of the clocks required by APE.
  Must include following entries:
  - ahub
  - apb2ape
  - ape
  - adsp
  - adspneon
- resets: Should contain an entry for each entry in reset-names.
  See ../reset/reset.txt for details.
- reset-names: Names of the resets required for APE.
  Must include following entries:
  - adspdbg
  - adspintf
  - adspneon
  - adspperiph
  - adspscu
  - adspwdt
  - ape
  - adsp

== APE sub nodes ==

* ast

Describes the address space translation used.
See ./tegra-sce-channel.txt for details.

* ivc-channels

Contains a sub-node for each IVC channel implemented by the APE.
For IVC channel details, please refer: ./tegra-ivc-channel.txt

* hsp

Describes the hardware synchronization primitive(s) used.
See ./tegra-sce-ivc.txt for details (syntax is the same).

== Possible example ==

tegra_ape: rtcpu@2993000 {
	compatible = "nvidia,tegra186-ape-ivc";
	reg = <0x0 0x2993000 0x0 0x10000>;
	nvidia,ast = <&ape_ast0>, <&ape_ast1>;
	clocks =
		<&tegra_car TEGRA186_CLK_AHUB>,
		<&tegra_car TEGRA186_CLK_APB2APE>,
		<&tegra_car TEGRA186_CLK_APE>,
		<&tegra_car TEGRA186_CLK_ADSP>,
		<&tegra_car TEGRA186_CLK_ADSPNEON>;
	clock-names =
		"ahub",
		"apb2ape",
		"ape",
		"adsp",
		"adspneon";
	resets =
		<&tegra_car TEGRA186_RESET_ADSPDBG>,
		<&tegra_car TEGRA186_RESET_ADSPINTF>,
		<&tegra_car TEGRA186_RESET_ADSPNEON>,
		<&tegra_car TEGRA186_RESET_ADSPPERIPH>,
		<&tegra_car TEGRA186_RESET_ADSPSCU>,
		<&tegra_car TEGRA186_RESET_ADSPWDT>,
		<&tegra_car TEGRA186_RESET_APE>,
		<&tegra_car TEGRA186_RESET_ADSP>;
	reset-names =
		"adspdbg",
		"adspintf",
		"adspneon",
		"adspperiph",
		"adspscu",
		"adspwdt",
		"ape",
		"adsp";

	/* See ./tegra-sce-ivc.txt for generic IVC example */
};
