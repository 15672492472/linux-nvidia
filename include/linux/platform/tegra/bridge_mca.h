/*
 * Copyright (c) 2015, NVIDIA CORPORATION.  All rights reserved.
 *
 * This program is free software; you can redistribute it and/or modify it
 * under the terms and conditions of the GNU General Public License,
 * version 2, as published by the Free Software Foundation.
 *
 * This program is distributed in the hope it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
 * more details.
 */

#include <asm/traps.h>

struct bridge_mca_error {
	char *desc;
};

struct bridge_mca_bank {
	struct list_head node;
	struct serr_hook *hook;
	char *name;
	phys_addr_t bank;
	void __iomem *vaddr;
	struct bridge_mca_error *errors;
	int max_error;
};

struct tegra_bridge_data {
	char *name;
	unsigned long offset;
	struct bridge_mca_error *errors;
	int max_error;
};

static struct bridge_mca_error t18x_axi_errors[] = {
	{.desc = "Reserved"}, /* 0 */
	{.desc = "Illegal TZ G0 security access"},
	{.desc = "Illegal TZ G1 security access"},
	{.desc = "Illegal TZ G2 security access"},
	{.desc = "Illegal TZ G3 security access"},
	{.desc = "Illegal TZ G4 security access"}, /* 5 */
	{.desc = "Illegal TZ G5 security access"},
	{.desc = "Illegal TZ G6 security access"},
	{.desc = "Illegal TZ G7 security access"},
	{.desc = "Illegal priviledged access"},
	{.desc = "Address decode error generated by bridge"}, /* 10 */
	{.desc = "Insecure access to a slave"},
	{.desc = "Insecure master ID access"},
	{.desc = "Unsupported FIXED access type"},
	{.desc = "Unsupported WRAP access type"},
	{.desc = "Unsupported INCR access type"}, /* 15 */
	{.desc = "Unsupported burst size error"},
	{.desc = "Unsupported alignment type error"},
	{.desc = "Timeout error"},
	{.desc = "Illegal BE access error"},
	{.desc = "Slave error"}, /* 20 */
	{.desc = "Slave decode error"},
	{.desc = "Bridge error"},
};
