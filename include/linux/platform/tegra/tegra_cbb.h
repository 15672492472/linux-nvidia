/*
 * Copyright (c) 2017-2018, NVIDIA CORPORATION.  All rights reserved.
 *
 * This program is free software; you can redistribute it and/or modify it
 * under the terms and conditions of the GNU General Public License,
 * version 2, as published by the Free Software Foundation.
 *
 * This program is distributed in the hope it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
 * more details.
 */


#define  OFF_ERRLOGGER_0_ID_COREID_0            0x00000000
#define  OFF_ERRLOGGER_0_ID_REVISIONID_0        0x00000004
#define  OFF_ERRLOGGER_0_FAULTEN_0              0x00000008
#define  OFF_ERRLOGGER_0_ERRVLD_0               0x0000000c
#define  OFF_ERRLOGGER_0_ERRCLR_0               0x00000010
#define  OFF_ERRLOGGER_0_ERRLOG0_0              0x00000014
#define  OFF_ERRLOGGER_0_ERRLOG1_0              0x00000018
#define  OFF_ERRLOGGER_0_RESERVED_00_0          0x0000001c
#define  OFF_ERRLOGGER_0_ERRLOG3_0              0x00000020
#define  OFF_ERRLOGGER_0_ERRLOG4_0              0x00000024
#define  OFF_ERRLOGGER_0_ERRLOG5_0              0x00000028
#define  OFF_ERRLOGGER_0_STALLEN_0              0x00000038

#define  OFF_ERRLOGGER_1_ID_COREID_0            0x00000080
#define  OFF_ERRLOGGER_1_ID_REVISIONID_0        0x00000084
#define  OFF_ERRLOGGER_1_FAULTEN_0              0x00000088
#define  OFF_ERRLOGGER_1_ERRVLD_0               0x0000008c
#define  OFF_ERRLOGGER_1_ERRCLR_0               0x00000090
#define  OFF_ERRLOGGER_1_ERRLOG0_0              0x00000094
#define  OFF_ERRLOGGER_1_ERRLOG1_0              0x00000098
#define  OFF_ERRLOGGER_1_RESERVED_00_0          0x0000009c
#define  OFF_ERRLOGGER_1_ERRLOG3_0              0x000000A0
#define  OFF_ERRLOGGER_1_ERRLOG4_0              0x000000A4
#define  OFF_ERRLOGGER_1_ERRLOG5_0              0x000000A8
#define  OFF_ERRLOGGER_1_STALLEN_0              0x000000b8

#define  OFF_ERRLOGGER_2_ID_COREID_0            0x00000100
#define  OFF_ERRLOGGER_2_ID_REVISIONID_0        0x00000104
#define  OFF_ERRLOGGER_2_FAULTEN_0              0x00000108
#define  OFF_ERRLOGGER_2_ERRVLD_0               0x0000010c
#define  OFF_ERRLOGGER_2_ERRCLR_0               0x00000110
#define  OFF_ERRLOGGER_2_ERRLOG0_0              0x00000114
#define  OFF_ERRLOGGER_2_ERRLOG1_0              0x00000118
#define  OFF_ERRLOGGER_2_RESERVED_00_0          0x0000011c
#define  OFF_ERRLOGGER_2_ERRLOG3_0              0x00000120
#define  OFF_ERRLOGGER_2_ERRLOG4_0              0x00000124
#define  OFF_ERRLOGGER_2_ERRLOG5_0              0x00000128
#define  OFF_ERRLOGGER_2_STALLEN_0              0x00000138


#define CBBNOC_BIT(_bit_) (1ULL << (_bit_))
#define CBBNOC_MASK(_msb_, _lsb_) \
	((CBBNOC_BIT(_msb_+1) - 1) & ~(CBBNOC_BIT(_lsb_) - 1))
#define CBBNOC_EXTRACT(_x_, _msb_, _lsb_)  \
	((_x_ & CBBNOC_MASK(_msb_, _lsb_)) >> _lsb_)


#define get_cbb_errlog0_trans_opc(_x_)		CBBNOC_EXTRACT(_x_, 4, 1)
#define get_cbb_errlog0_code(_x_)		CBBNOC_EXTRACT(_x_, 10, 8)
#define get_cbb_errlog0_src(_x_)		CBBNOC_EXTRACT(_x_, 27, 16)

#define get_cbb_errlog5_axi_id(_x_)		CBBNOC_EXTRACT(_x_, 30, 23)
#define get_cbb_errlog5_mstr_id(_x_)		CBBNOC_EXTRACT(_x_, 22, 19)
#define get_cbb_errlog5_vqc(_x_)		CBBNOC_EXTRACT(_x_, 18, 17)
#define get_cbb_errlog5_grpsec(_x_)		CBBNOC_EXTRACT(_x_, 16, 10)
#define get_cbb_errlog5_falconsec(_x_)		CBBNOC_EXTRACT(_x_, 9, 8)
#define get_cbb_errlog5_axprot(_x_)		CBBNOC_EXTRACT(_x_, 7, 5)
#define get_cbb_errlog5_non_modify(_x_)		CBBNOC_EXTRACT(_x_, 4, 4)
#define get_cbb_errlog5_axcache(_x_)		CBBNOC_EXTRACT(_x_, 3, 0)

#define get_cbb_routeid_initflow(_x_)		CBBNOC_EXTRACT(_x_, 23, 20)
#define get_cbb_routeid_targflow(_x_)		CBBNOC_EXTRACT(_x_, 19, 16)
#define get_cbb_routeid_targsubrange(_x_)	CBBNOC_EXTRACT(_x_, 15, 9)
#define get_cbb_routeid_seqid(_x_)		CBBNOC_EXTRACT(_x_, 8, 0)


struct tegra_cbbnoc_errors {
	char *errcode;
	char *src;
	char *type;
};

struct tegra_noc_packet_header {
	bool    lock;	// [0]
	u8      opc;	// [4:1]
	u8      errcode;// [10:8]= RD, RDW, RDL, RDX, WR, WRW, WRC, PRE, URG
	u16     len1;	// [27:16]
	bool    format;	// [31]  = 1 -> FlexNoC versions 2.7 & above
};

struct tegra_cbb_routeid {
	u8	initflow;	// [23:20]
	u16	targflow;	// [19:16]
	u8	targ_subrange;	// [15:09]
	u16	seqid;		// [08:00]
};


struct tegra_cbb_errlog_record {
	struct list_head node;
	struct serr_hook *callback;
	char            *name;
	phys_addr_t     start;
	void            __iomem *vaddr;
	u32             errlog0;
	u32             errlog1;
	u32             errlog2;
	u32             errlog3;
	u32             errlog4;
	u32             errlog5;
	u32             errlog6;	//RESERVED
	u32             errlog7;	//RESERVED
	u32             errlog8;	//RESERVED
	unsigned int    (*errvld)(void __iomem *addr);
	void            (*errclr)(void __iomem *addr);
	void            (*faulten)(void __iomem *addr);
	void            (*stallen)(void __iomem *addr);
	struct          tegra_cbbnoc_errors *errors;
	struct		tegra_lookup_noc_aperture *noc_aperture;
	int             max_noc_aperture;
};

struct tegra_lookup_noc_aperture {
	u8      initflow;
	u8      targflow;
	u8      targ_subrange;
	u8	init_mapping;
	u32	init_localaddress;
	u8	targ_mapping;
	u32	targ_localaddress;
};

struct tegra_cbb_bridge_data {
	char            *name;
	unsigned int    (*errvld)(void __iomem *addr);
	void            (*errclr)(void __iomem *addr);
	void            (*faulten)(void __iomem *addr);
	void            (*stallen)(void __iomem *addr);
	struct          tegra_cbbnoc_errors *errors;
	struct		tegra_lookup_noc_aperture *noc_aperture;
	int             max_error;
	int             max_noc_aperture;
};


/*
 * NOC aperture lookup table as per file "cbb_central_noc_Structure.info".
 * Fields:
 * Init flow, Targ flow, Targ subrange, Init mapping, Init localAddress, Targ mapping, Targ localAddress
 * -----------------------------------------------------------------------------------------------------
 */

static struct tegra_lookup_noc_aperture t194_lookup_noc_aperture[] = {
	{ 0x0, 0x0, 0x00, 0x0, 0x02300000,  0, 0x0 },
	{ 0x0, 0x1, 0x00, 0x0, 0x02003000,  0, 0x02003000 },
	{ 0x0, 0x1, 0x01, 0x0, 0x02006000,  2, 0x02006000 },
	{ 0x0, 0x1, 0x02, 0x0, 0x02016000,  3, 0x02016000 },
	{ 0x0, 0x1, 0x03, 0x0, 0x0201d000,  4, 0x0201d000 },
	{ 0x0, 0x1, 0x04, 0x0, 0x0202b000,  6, 0x0202b000 },
	{ 0x0, 0x1, 0x05, 0x0, 0x02434000, 20, 0x02434000 },
	{ 0x0, 0x1, 0x06, 0x0, 0x02436000, 21, 0x02436000 },
	{ 0x0, 0x1, 0x07, 0x0, 0x02438000, 22, 0x02438000 },
	{ 0x0, 0x1, 0x08, 0x0, 0x02445000, 24, 0x02445000 },
	{ 0x0, 0x1, 0x09, 0x0, 0x02446000, 25, 0x02446000 },
	{ 0x0, 0x1, 0x0a, 0x0, 0x02004000,  1, 0x02004000 },
	{ 0x0, 0x1, 0x0b, 0x0, 0x0201e000,  5, 0x0201e000 },
	{ 0x0, 0x1, 0x0c, 0x0, 0x0202c000,  7, 0x0202c000 },
	{ 0x0, 0x1, 0x0d, 0x0, 0x02204000,  8, 0x02204000 },
	{ 0x0, 0x1, 0x0e, 0x0, 0x02214000,  9, 0x02214000 },
	{ 0x0, 0x1, 0x0f, 0x0, 0x02224000, 10, 0x02224000 },
	{ 0x0, 0x1, 0x10, 0x0, 0x02234000, 11, 0x02234000 },
	{ 0x0, 0x1, 0x11, 0x0, 0x02244000, 12, 0x02244000 },
	{ 0x0, 0x1, 0x12, 0x0, 0x02254000, 13, 0x02254000 },
	{ 0x0, 0x1, 0x13, 0x0, 0x02264000, 14, 0x02264000 },
	{ 0x0, 0x1, 0x14, 0x0, 0x02274000, 15, 0x02274000 },
	{ 0x0, 0x1, 0x15, 0x0, 0x02284000, 16, 0x02284000 },
	{ 0x0, 0x1, 0x16, 0x0, 0x0243a000, 23, 0x0243a000 },
	{ 0x0, 0x1, 0x17, 0x0, 0x02370000, 17, 0x02370000 },
	{ 0x0, 0x1, 0x18, 0x0, 0x023d0000, 18, 0x023d0000 },
	{ 0x0, 0x1, 0x19, 0x0, 0x023e0000, 19, 0x023e0000 },
	{ 0x0, 0x1, 0x1a, 0x0, 0x02450000, 26, 0x02450000 },
	{ 0x0, 0x1, 0x1b, 0x0, 0x02460000, 27, 0x02460000 },
	{ 0x0, 0x1, 0x1c, 0x0, 0x02490000, 28, 0x02490000 },
	{ 0x0, 0x1, 0x1d, 0x0, 0x03130000, 31, 0x03130000 },
	{ 0x0, 0x1, 0x1e, 0x0, 0x03160000, 32, 0x03160000 },
	{ 0x0, 0x1, 0x1f, 0x0, 0x03270000, 33, 0x03270000 },
	{ 0x0, 0x1, 0x20, 0x0, 0x032e0000, 35, 0x032e0000 },
	{ 0x0, 0x1, 0x21, 0x0, 0x03300000, 36, 0x03300000 },
	{ 0x0, 0x1, 0x22, 0x0, 0x13090000, 40, 0x13090000 },
	{ 0x0, 0x1, 0x23, 0x0, 0x20120000, 43, 0x20120000 },
	{ 0x0, 0x1, 0x24, 0x0, 0x20170000, 44, 0x20170000 },
	{ 0x0, 0x1, 0x25, 0x0, 0x20190000, 45, 0x20190000 },
	{ 0x0, 0x1, 0x26, 0x0, 0x201b0000, 46, 0x201b0000 },
	{ 0x0, 0x1, 0x27, 0x0, 0x20250000, 47, 0x20250000 },
	{ 0x0, 0x1, 0x28, 0x0, 0x20260000, 48, 0x20260000 },
	{ 0x0, 0x1, 0x29, 0x0, 0x20420000, 49, 0x20420000 },
	{ 0x0, 0x1, 0x2a, 0x0, 0x20460000, 50, 0x20460000 },
	{ 0x0, 0x1, 0x2b, 0x0, 0x204f0000, 51, 0x204f0000 },
	{ 0x0, 0x1, 0x2c, 0x0, 0x20520000, 52, 0x20520000 },
	{ 0x0, 0x1, 0x2d, 0x0, 0x20580000, 53, 0x20580000 },
	{ 0x0, 0x1, 0x2e, 0x0, 0x205a0000, 54, 0x205a0000 },
	{ 0x0, 0x1, 0x2f, 0x0, 0x205c0000, 55, 0x205c0000 },
	{ 0x0, 0x1, 0x30, 0x0, 0x20690000, 56, 0x20690000 },
	{ 0x0, 0x1, 0x31, 0x0, 0x20770000, 57, 0x20770000 },
	{ 0x0, 0x1, 0x32, 0x0, 0x20790000, 58, 0x20790000 },
	{ 0x0, 0x1, 0x33, 0x0, 0x20880000, 59, 0x20880000 },
	{ 0x0, 0x1, 0x34, 0x0, 0x20990000, 62, 0x20990000 },
	{ 0x0, 0x1, 0x35, 0x0, 0x20e10000, 65, 0x20e10000 },
	{ 0x0, 0x1, 0x36, 0x0, 0x20e70000, 66, 0x20e70000 },
	{ 0x0, 0x1, 0x37, 0x0, 0x20e80000, 67, 0x20e80000 },
	{ 0x0, 0x1, 0x38, 0x0, 0x20f30000, 68, 0x20f30000 },
	{ 0x0, 0x1, 0x39, 0x0, 0x20f50000, 69, 0x20f50000 },
	{ 0x0, 0x1, 0x3a, 0x0, 0x20fc0000, 70, 0x20fc0000 },
	{ 0x0, 0x1, 0x3b, 0x0, 0x21110000, 72, 0x21110000 },
	{ 0x0, 0x1, 0x3c, 0x0, 0x21270000, 73, 0x21270000 },
	{ 0x0, 0x1, 0x3d, 0x0, 0x21290000, 74, 0x21290000 },
	{ 0x0, 0x1, 0x3e, 0x0, 0x21840000, 75, 0x21840000 },
	{ 0x0, 0x1, 0x3f, 0x0, 0x21880000, 76, 0x21880000 },
	{ 0x0, 0x1, 0x40, 0x0, 0x218d0000, 77, 0x218d0000 },
	{ 0x0, 0x1, 0x41, 0x0, 0x21950000, 78, 0x21950000 },
	{ 0x0, 0x1, 0x42, 0x0, 0x21960000, 79, 0x21960000 },
	{ 0x0, 0x1, 0x43, 0x0, 0x21a10000, 80, 0x21a10000 },
	{ 0x0, 0x1, 0x44, 0x0, 0x024a0000, 29, 0x024a0000 },
	{ 0x0, 0x1, 0x45, 0x0, 0x024c0000, 30, 0x024c0000 },
	{ 0x0, 0x1, 0x46, 0x0, 0x032c0000, 34, 0x032c0000 },
	{ 0x0, 0x1, 0x47, 0x0, 0x03400000, 37, 0x03400000 },
	{ 0x0, 0x1, 0x48, 0x0, 0x130a0000, 41, 0x130a0000 },
	{ 0x0, 0x1, 0x49, 0x0, 0x130c0000, 42, 0x130c0000 },
	{ 0x0, 0x1, 0x4a, 0x0, 0x208a0000, 60, 0x208a0000 },
	{ 0x0, 0x1, 0x4b, 0x0, 0x208c0000, 61, 0x208c0000 },
	{ 0x0, 0x1, 0x4c, 0x0, 0x209a0000, 63, 0x209a0000 },
	{ 0x0, 0x1, 0x4d, 0x0, 0x21a40000, 81, 0x21a40000 },
	{ 0x0, 0x1, 0x4e, 0x0, 0x03440000, 38, 0x03440000 },
	{ 0x0, 0x1, 0x4f, 0x0, 0x20d00000, 64, 0x20d00000 },
	{ 0x0, 0x1, 0x50, 0x0, 0x21000000, 71, 0x21000000 },
	{ 0x0, 0x1, 0x51, 0x0, 0x0b000000, 39, 0x0b000000 },
	{ 0x0, 0x2, 0x00, 0x0, 0x00000000,  0, 0x00000000 },
	{ 0x0, 0x3, 0x00, 0x0, 0x02340000,  0, 0x00000000 },
	{ 0x0, 0x4, 0x00, 0x0, 0x17000000,  0, 0x17000000 },
	{ 0x0, 0x4, 0x01, 0x0, 0x18000000,  1, 0x18000000 },
	{ 0x0, 0x5, 0x00, 0x0, 0x13e80000,  1, 0x13e80000 },
	{ 0x0, 0x5, 0x01, 0x0, 0x15810000, 12, 0x15810000 },
	{ 0x0, 0x5, 0x02, 0x0, 0x15840000, 14, 0x15840000 },
	{ 0x0, 0x5, 0x03, 0x0, 0x15a40000, 17, 0x15a40000 },
	{ 0x0, 0x5, 0x04, 0x0, 0x13f00000,  3, 0x13f00000 },
	{ 0x0, 0x5, 0x05, 0x0, 0x15820000, 13, 0x15820000 },
	{ 0x0, 0x5, 0x06, 0x0, 0x13ec0000,  2, 0x13ec0000 },
	{ 0x0, 0x5, 0x07, 0x0, 0x15200000,  6, 0x15200000 },
	{ 0x0, 0x5, 0x08, 0x0, 0x15340000,  7, 0x15340000 },
	{ 0x0, 0x5, 0x09, 0x0, 0x15380000,  8, 0x15380000 },
	{ 0x0, 0x5, 0x0a, 0x0, 0x15500000, 10, 0x15500000 },
	{ 0x0, 0x5, 0x0b, 0x0, 0x155c0000, 11, 0x155c0000 },
	{ 0x0, 0x5, 0x0c, 0x0, 0x15a00000, 16, 0x15a00000 },
	{ 0x0, 0x5, 0x0d, 0x0, 0x13e00000,  0, 0x13e00000 },
	{ 0x0, 0x5, 0x0e, 0x0, 0x15100000,  5, 0x15100000 },
	{ 0x0, 0x5, 0x0f, 0x0, 0x15480000,  9, 0x15480000 },
	{ 0x0, 0x5, 0x10, 0x0, 0x15880000, 15, 0x15880000 },
	{ 0x0, 0x5, 0x11, 0x0, 0x15a80000, 18, 0x15a80000 },
	{ 0x0, 0x5, 0x12, 0x0, 0x15b00000, 19, 0x15b00000 },
	{ 0x0, 0x5, 0x13, 0x0, 0x14800000,  4, 0x14800000 },
	{ 0x0, 0x5, 0x14, 0x0, 0x15c00000, 20, 0x15c00000 },
	{ 0x0, 0x5, 0x15, 0x0, 0x16000000, 21, 0x16000000 },
	{ 0x0, 0x6, 0x00, 0x0, 0x02000000,  4, 0x02000000 },
	{ 0x0, 0x6, 0x01, 0x0, 0x02007000,  5, 0x02007000 },
	{ 0x0, 0x6, 0x02, 0x0, 0x02008000,  6, 0x02008000 },
	{ 0x0, 0x6, 0x03, 0x0, 0x02013000,  7, 0x02013000 },
	{ 0x0, 0x6, 0x04, 0x0, 0x0201c000,  8, 0x0201c000 },
	{ 0x0, 0x6, 0x05, 0x0, 0x02020000,  9, 0x02020000 },
	{ 0x0, 0x6, 0x06, 0x0, 0x0202a000, 10, 0x0202a000 },
	{ 0x0, 0x6, 0x07, 0x0, 0x0202e000, 11, 0x0202e000 },
	{ 0x0, 0x6, 0x08, 0x0, 0x06400000, 33, 0x06400000 },
	{ 0x0, 0x6, 0x09, 0x0, 0x02038000, 12, 0x02038000 },
	{ 0x0, 0x6, 0x0a, 0x0, 0x00100000,  0, 0x00100000 },
	{ 0x0, 0x6, 0x0b, 0x0, 0x023b0000, 13, 0x023b0000 },
	{ 0x0, 0x6, 0x0c, 0x0, 0x02800000, 16, 0x02800000 },
	{ 0x0, 0x6, 0x0d, 0x0, 0x030e0000, 22, 0x030e0000 },
	{ 0x0, 0x6, 0x0e, 0x0, 0x03800000, 23, 0x03800000 },
	{ 0x0, 0x6, 0x0f, 0x0, 0x03980000, 25, 0x03980000 },
	{ 0x0, 0x6, 0x10, 0x0, 0x03a60000, 26, 0x03a60000 },
	{ 0x0, 0x6, 0x11, 0x0, 0x03d80000, 31, 0x03d80000 },
	{ 0x0, 0x6, 0x12, 0x0, 0x20000000, 36, 0x20000000 },
	{ 0x0, 0x6, 0x13, 0x0, 0x20050000, 38, 0x20050000 },
	{ 0x0, 0x6, 0x14, 0x0, 0x201e0000, 40, 0x201e0000 },
	{ 0x0, 0x6, 0x15, 0x0, 0x20280000, 42, 0x20280000 },
	{ 0x0, 0x6, 0x16, 0x0, 0x202c0000, 43, 0x202c0000 },
	{ 0x0, 0x6, 0x17, 0x0, 0x20390000, 44, 0x20390000 },
	{ 0x0, 0x6, 0x18, 0x0, 0x20430000, 45, 0x20430000 },
	{ 0x0, 0x6, 0x19, 0x0, 0x20440000, 46, 0x20440000 },
	{ 0x0, 0x6, 0x1a, 0x0, 0x204e0000, 47, 0x204e0000 },
	{ 0x0, 0x6, 0x1b, 0x0, 0x20550000, 48, 0x20550000 },
	{ 0x0, 0x6, 0x1c, 0x0, 0x20570000, 49, 0x20570000 },
	{ 0x0, 0x6, 0x1d, 0x0, 0x20590000, 50, 0x20590000 },
	{ 0x0, 0x6, 0x1e, 0x0, 0x20730000, 52, 0x20730000 },
	{ 0x0, 0x6, 0x1f, 0x0, 0x209f0000, 54, 0x209f0000 },
	{ 0x0, 0x6, 0x20, 0x0, 0x20e20000, 55, 0x20e20000 },
	{ 0x0, 0x6, 0x21, 0x0, 0x20ed0000, 56, 0x20ed0000 },
	{ 0x0, 0x6, 0x22, 0x0, 0x20fd0000, 57, 0x20fd0000 },
	{ 0x0, 0x6, 0x23, 0x0, 0x21120000, 59, 0x21120000 },
	{ 0x0, 0x6, 0x24, 0x0, 0x211a0000, 60, 0x211a0000 },
	{ 0x0, 0x6, 0x25, 0x0, 0x21850000, 61, 0x21850000 },
	{ 0x0, 0x6, 0x26, 0x0, 0x21860000, 62, 0x21860000 },
	{ 0x0, 0x6, 0x27, 0x0, 0x21890000, 63, 0x21890000 },
	{ 0x0, 0x6, 0x28, 0x0, 0x21970000, 64, 0x21970000 },
	{ 0x0, 0x6, 0x29, 0x0, 0x21990000, 65, 0x21990000 },
	{ 0x0, 0x6, 0x2a, 0x0, 0x21a00000, 66, 0x21a00000 },
	{ 0x0, 0x6, 0x2b, 0x0, 0x21a90000, 68, 0x21a90000 },
	{ 0x0, 0x6, 0x2c, 0x0, 0x21ac0000, 70, 0x21ac0000 },
	{ 0x0, 0x6, 0x2d, 0x0, 0x01f80000,  3, 0x01f80000 },
	{ 0x0, 0x6, 0x2e, 0x0, 0x024e0000, 14, 0x024e0000 },
	{ 0x0, 0x6, 0x2f, 0x0, 0x030c0000, 21, 0x030c0000 },
	{ 0x0, 0x6, 0x30, 0x0, 0x03820000, 24, 0x03820000 },
	{ 0x0, 0x6, 0x31, 0x0, 0x03aa0000, 27, 0x03aa0000 },
	{ 0x0, 0x6, 0x32, 0x0, 0x03c80000, 29, 0x03c80000 },
	{ 0x0, 0x6, 0x33, 0x0, 0x130e0000, 34, 0x130e0000 },
	{ 0x0, 0x6, 0x34, 0x0, 0x20020000, 37, 0x20020000 },
	{ 0x0, 0x6, 0x35, 0x0, 0x20060000, 39, 0x20060000 },
	{ 0x0, 0x6, 0x36, 0x0, 0x20200000, 41, 0x20200000 },
	{ 0x0, 0x6, 0x37, 0x0, 0x206a0000, 51, 0x206a0000 },
	{ 0x0, 0x6, 0x38, 0x0, 0x20740000, 53, 0x20740000 },
	{ 0x0, 0x6, 0x39, 0x0, 0x20fe0000, 58, 0x20fe0000 },
	{ 0x0, 0x6, 0x3a, 0x0, 0x21a20000, 67, 0x21a20000 },
	{ 0x0, 0x6, 0x3b, 0x0, 0x21aa0000, 69, 0x21aa0000 },
	{ 0x0, 0x6, 0x3c, 0x0, 0x02b80000, 17, 0x02b80000 },
	{ 0x0, 0x6, 0x3d, 0x0, 0x03080000, 20, 0x03080000 },
	{ 0x0, 0x6, 0x3e, 0x0, 0x13100000, 35, 0x13100000 },
	{ 0x0, 0x6, 0x3f, 0x0, 0x01f00000,  2, 0x01f00000 },
	{ 0x0, 0x6, 0x40, 0x0, 0x03000000, 19, 0x03000000 },
	{ 0x0, 0x6, 0x41, 0x0, 0x03c00000, 28, 0x03c00000 },
	{ 0x0, 0x6, 0x42, 0x0, 0x03d00000, 30, 0x03d00000 },
	{ 0x0, 0x6, 0x43, 0x0, 0x01700000,  1, 0x01700000 },
	{ 0x0, 0x6, 0x44, 0x0, 0x02c00000, 18, 0x02c00000 },
	{ 0x0, 0x6, 0x45, 0x0, 0x02600000, 15, 0x02600000 },
	{ 0x0, 0x6, 0x46, 0x0, 0x06000000, 32, 0x06000000 },
	{ 0x0, 0x6, 0x47, 0x0, 0x24000000, 71, 0x24000000 },
	{ 0x0, 0x7, 0x00, 0x0, 0x12000000,  0, 0x12000000 },
	{ 0x0, 0x8, 0x00, 0x0, 0x11000000,  0, 0x11000000 },
	{ 0x0, 0x9, 0x00, 0x0, 0x10000000,  0, 0x10000000 },
	{ 0x0, 0xA, 0x00, 0x0, 0x22000000,  0, 0x22000000 }
};

