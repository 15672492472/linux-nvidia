/*
 * Copyright (c) 2016, NVIDIA CORPORATION.  All rights reserved.
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; version 2 of the License.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
 * more details.
 */

#include "dt-bindings/sound/tegra-asoc-alt.h"
#include "tegra186-quill-p3310-1000-a00-00-base.dts"
#include "tegra186-modules/tegra186-super-module-e2614-p2597-1000-a00.dtsi"
#include "tegra186-modules/tegra186-df-camera.dtsi"

/ {
	model = "p4570-0120";
	nvidia,dtsfilename = __FILE__;

	dfsh {
		compatible = "nvidia,tegra186-dfsh";
		vdd-1v8-supply = <&spmic_sd2>;
		dfsh,reset-gpio =
			<&tegra_gpio TEGRA_GPIO(R, 5) GPIO_ACTIVE_LOW>;
		dfsh,boot0-gpio =
			<&tegra_gpio TEGRA_GPIO(X, 6) GPIO_ACTIVE_LOW>;
		status = "okay";
	};

	gpio@2200000 {
		camera-control {
			gpio-output-low = <
				TEGRA_GPIO(Q, 5)
				TEGRA_GPIO(X, 6)
				TEGRA_GPIO(R, 5)
				TEGRA_GPIO(X, 5)
				TEGRA_GPIO(R, 1)
				TEGRA_GPIO(L, 6)
				>;
		};
	};

	backlight {
		status = "disabled";
	};

	sdhci@3400000 {
		/delete-property/ wp-gpios;
	};

	fixed-regulators {
		vdd_fan: regulator@13 {
			gpio = <&tegra_gpio TEGRA_GPIO(I, 5) 0>;
			enable-active-high;
		};
                vdd_usb2_5v: regulator@17 {
			gpio = "";
			regulator-always-on;
			regulator-boot-on;
		};

		cs53l30_vp: regulator@14 {
			regulator-min-microvolt = <3300000>;
			regulator-max-microvolt = <3300000>;
			regulator-always-on;
		};

		cs53l30_va: regulator@101 {
			regulator-min-microvolt = <1800000>;
			regulator-max-microvolt = <1800000>;
			regulator-always-on;
		};
	};

	pwm-fan {
		vdd-fan-supply = <&vdd_fan>;
	};

	i2c@3160000 {
		lp8557-backlight-s-wuxga-8-0@2c {
			status = "disabled";
		};
		ina3221x@40 {
			status = "disabled";
		};
		ina3221x@41 {
			status = "disabled";
		};
		ina3221x@43 {
			status = "disabled";
		};
	};

	xhci@3530000 {
		status = "okay";
		phys = <&tegra_xusb_padctl TEGRA_PADCTL_PHY_UTMI_P(0)>,
			<&tegra_xusb_padctl TEGRA_PADCTL_PHY_UTMI_P(1)>,
			<&tegra_xusb_padctl TEGRA_PADCTL_PHY_UTMI_P(2)>;
		phy-names = "utmi-0", "utmi-1", "utmi-2";
	};

	pinctrl@3520000 {
		tegra_xusb_padctl_pinmux_default: pinmux {
			usb2-micro-AB-2 {
				nvidia,lanes = "otg-2";
				nvidia,function = "xusb";
				nvidia,port-cap = <TEGRA_PADCTL_PORT_HOST_ONLY>;
			};
			/* P4573 does not support usb 3.0 */
			usb3-std-A-port2 {
				status = "disabled";
			};
		};
	};

	plugin-manager {
		fragment-500-xusb-config {
			status = "disbled";
		};
		fragment-e3325-xusb {
			status = "disabled";
		};
		fragment-500-e3325-pcie {
			status = "disabled";
		};
	};
	pinmux@2430000 {
		pinctrl-names = "default";
		pinctrl-0 = <&pinmux_default>;
		pinmux_default: common {
			directdc1_out3_pq5 {
				nvidia,pins = "directdc1_out3_pq5";
				nvidia,function = "rsvd1";
				nvidia,pull = <TEGRA_PIN_PULL_NONE>;
				nvidia,tristate = <TEGRA_PIN_DISABLE>;
				nvidia,enable-input = <TEGRA_PIN_DISABLE>;
			};
			gp_pwm6_pl6 {
				nvidia,pins = "gp_pwm6_pl6";
				nvidia,function = "rsvd1";
				nvidia,pull = <TEGRA_PIN_PULL_NONE>;
				nvidia,tristate = <TEGRA_PIN_DISABLE>;
				nvidia,enable-input = <TEGRA_PIN_DISABLE>;
			};
			qspi_cs_n_pr5 {
				nvidia,pins = "qspi_cs_n_pr5";
				nvidia,function = "rsvd1";
				nvidia,pull = <TEGRA_PIN_PULL_NONE>;
				nvidia,tristate = <TEGRA_PIN_DISABLE>;
				nvidia,enable-input = <TEGRA_PIN_DISABLE>;
			};
		};
	};

	spdif_dit {
		status = "disabled";
	};

	serial@c280000 {
		status = "okay";
	};

	sound {
		status = "disabled";
	};

	sound_ref {
		compatible = "nvidia,tegra186-p4573-audio";
		nvidia,model = "t186-p4573-audio";
		status = "okay";

		nvidia,xbar = <&tegra_axbar>;
		nvidia,audio-routing =
			"AMIC1", "x MIC1 Bias",
			"x IN1_DMIC1", "AMIC1",
			"AMIC2", "x MIC2 Bias",
			"x IN2", "AMIC2",
			"AMIC3", "x MIC3 Bias",
			"x IN3_DMIC2", "AMIC3",
			"AMIC4", "x MIC4 Bias",
			"x IN4", "AMIC4",
			"AMIC5", "y MIC1 Bias",
			"y IN1_DMIC1", "AMIC5",
			"AMIC6", "y MIC2 Bias",
			"y IN2", "AMIC6",
			"AMIC7", "y MIC3 Bias",
			"y IN3_DMIC2", "AMIC7",
			"AMIC8", "y MIC4 Bias",
			"y IN4", "AMIC8",
			"Headset Stereo", "z HPOL",
			"Headset Stereo", "z HPOR",
			"Headset Mic", "z MICBIAS1",
			"z IN1P", "Headset Mic";

		nvidia,num-codec-link = <3>;

		nvidia,num-clk = <8>;
		nvidia,clk-rates = < 270950400	/* PLLA_x11025_RATE */
				     11289600	/* AUD_MCLK_x11025_RATE */
				     45158400	/* PLLA_OUT0_x11025_RATE */
				     45158400	/* AHUB_x11025_RATE */
				     245760000	/* PLLA_x8000_RATE */
				     12288000	/* AUD_MCLK_x8000_RATE */
				     49152000	/* PLLA_OUT0_x8000_RATE */
				     49152000 >;/* AHUB_x8000_RATE */
		clocks = <&tegra_car TEGRA186_CLK_PLLP_OUT0>,
			<&tegra_car TEGRA186_CLK_PLLA>,
			<&tegra_car TEGRA186_CLK_PLL_A_OUT0>,
			<&tegra_car TEGRA186_CLK_AHUB>,
			<&tegra_car TEGRA186_CLK_CLK_M>,
			<&tegra_car TEGRA186_CLK_AUD_MCLK>;
		clock-names = "pll_p_out1", "pll_a", "pll_a_out0", "ahub",
				"clk_m", "extern1";
		resets = <&tegra_car TEGRA186_RESET_AUD_MCLK>;
		reset-names = "extern1_rst";

		nvidia,dai-link-1 {
			link-name = "cs53l30-link1";
			cpu-dai = <&tegra_i2s1>;
			codec-dai = <&cs53l30_1>;
			cpu-dai-name = "I2S1";
			codec-dai-name = "cs53l30";
			format = "dsp_a";
			bitclock-slave;
			frame-slave;
			/* NB_IF: rising edge of bclk + frame sync at high */
			bitclock-noninversion;
			frame-inversion;
			bit-format = "s32_le";
			bclk_ratio = <0>;
			srate = <48000>;
			num-channel = <4>;
			name-prefix = "x";
		};

		nvidia,dai-link-2 {
			link-name = "cs53l30-link2";
			cpu-dai = <&tegra_i2s2>;
			codec-dai = <&cs53l30_2>;
			cpu-dai-name = "I2S2";
			codec-dai-name = "cs53l30";
			format = "dsp_a";
			bitclock-slave;
			frame-slave;
			/* NB_IF: rising edge of bclk + frame sync at high */
			bitclock-noninversion;
			frame-inversion;
			bit-format = "s32_le";
			bclk_ratio = <0>;
			srate = <48000>;
			num-channel = <4>;
			name-prefix = "y";
		};

		nvidia,dai-link-3 {
			link-name = "rt5658-link";
			cpu-dai = <&tegra_i2s3>;
			codec-dai = <&rt5658_codec>;
			cpu-dai-name = "I2S3";
			codec-dai-name = "rt5659-aif1";
			format = "i2s";
			bitclock-slave;
			frame-slave;
			bitclock-noninversion;
			frame-noninversion;
			bit-format = "s32_le";
			bclk_ratio = <0>;
			srate = <48000>;
			num-channel = <2>;
			name-prefix = "z";
		};
	};
};

&gen2_i2c {
	status = "okay";

	cs53l30_1: cs53l30@48 {
		compatible = "cirrus,cs53l30";
		reg = <0x48>;
		clocks = <&tegra_car TEGRA186_CLK_AUD_MCLK>;
		clock-names = "mclk";
		reset-gpios = <&tegra_gpio 78 0>;
		mute-gpios = <&tegra_gpio 12 0>;
		micbias-lvl = <1>;
		VA-supply = <&cs53l30_va>;
		VP-supply = <&cs53l30_vp>;
	};

	cs53l30_2: cs53l30@4A {
		compatible = "cirrus,cs53l30";
		reg = <0x4A>;
		clocks = <&tegra_car TEGRA186_CLK_AUD_MCLK>;
		clock-names = "mclk";
		reset-gpios = <&tegra_gpio 71 0>;
		micbias-lvl = <1>;
		VA-supply = <&cs53l30_va>;
		VP-supply = <&cs53l30_vp>;
	};

	rt5658_codec: rt5658@1A {
		compatible = "realtek,rt5658";
		reg = <0x1A>;
		clocks = <&tegra_car TEGRA186_CLK_AUD_MCLK>;
		clock-names = "mclk";
		realtek,dmic1-data-pin = <2>;
		realtek,jd-src = <1>;
	};
};

&tegra_i2s1 {
	/* 32 bits per slot */
	fsync-width = <31>;
	status = "okay";
};

&tegra_i2s2 {
	/* 32 bits per slot */
	fsync-width = <31>;
	status = "okay";
};

&tegra_i2s3 {
	/* 32 bits per slot */
	fsync-width = <31>;
	status = "okay";
};
