/*
 * tegra186-vcm31-bali-common.dtsi: VCM3.1 based bali(sunstreaker)
 * common dtsi.
 *
 * Copyright (c) 2015-2016, NVIDIA CORPORATION.  All rights reserved.
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; version 2 of the License.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
 * more details.
 */

#include <dt-bindings/types.h>
/dts-v1/;

/memreserve/ 0x80000000 0x00010000;

#include "tegra186-platforms/tegra186-vcm31.dtsi"
#include "tegra186-vcm31-bali-disp.dtsi"
#include "tegra186-platforms/tegra186-vcm31-power-tree-bali.dtsi"

#define EXTCON_NONE		0
#define EXTCON_USB             1
#define EXTCON_USB_Host        2

/ {
        model = "t186-vcm31-bali";
        compatible = "nvidia,t186-vcm31-bali", "nvidia,tegra186";

        nvidia,dtbbuildtime = __DATE__, __TIME__;
        #address-cells = <2>;
        #size-cells = <2>;

	pmc@c360000 {
		io-pad-defaults {
			sdmmc1-hv {
				nvidia,enable-dynamic-pad-voltage;
			};
			sdmmc3-hv {
				nvidia,enable-dynamic-pad-voltage;
			};
		};
	};

        serial@3100000 { /* Tegra UARTA: CSB */
		compatible = "nvidia,tegra186-hsuart";
                status = "okay";
        };

        serial@3110000 { /* Tegra UARTB: DEBUG */
		compatible = "nvidia,tegra210-uart";
                status = "okay";
        };

	serial@c280000 { /* TEGRA UARTC: Bluetooth */
		compatible = "nvidia,tegra186-hsuart";
		nvidia,adjust-baud-rates = <115200 3000000 170>;
		status = "okay";
	};

	serial@3130000 { /* Tegra UARTD: RH */
		compatible = "nvidia,tegra186-hsuart";
		status = "okay";
	};

	spi@c260000 { /* Tegra SPI2: RH, slave */
		status = "okay";
		compatible = "nvidia,tegra186-spi-slave";
		nvidia,slave-ready-gpio = <&tegra_gpio TEGRA_GPIO(V,6) 1>;
		spi@0 {
			compatible = "spidev";
			/* reg = <0> - CS0 */
			/* reg = <1> - CS1 */
			reg = <0>;
			spi-max-frequency = <25000000>;
			spi-cpha;
			spi-cpol;
			controller-data {
				nvidia,variable-length-transfer;
			};
		};
	};

	spi@3210000 { /* Tegra SPI1: master */
		status = "okay";
		spi@0 {				/* gyro */
			compatible = "spidev";
			reg = <0>;
			spi-max-frequency = <4000000>;
			spi-cpha;
			spi-cpol;
			/* NOTE: spidev does not use this property */
			interrupts = <&tegra_gpio TEGRA_GPIO(EE,2) 0>;
		};
		spi@1 {				/* acc */
			compatible = "spidev";
			reg = <1>;
			spi-max-frequency = <4000000>;
			spi-cpha;
			spi-cpol;
			/* NOTE: spidev does not use this property */
			interrupts = <&tegra_gpio TEGRA_GPIO(U,5) 0>;
		};

	};

	i2c@3160000 { /* Tegra I2C1 (I2CA) */
		status = "okay";
		clock-frequency = <400000>;
	};

	i2c@c240000 { /* Tegra I2C2 (I2CB) */
		status = "okay";
		nvidia,clock-always-on;
	};

	i2c@c250000 { /* Tegra I2C8 (I2CC) */
		status = "okay";
	};

	i2c@3180000 { /* Tegra I2C3 (I2CD) */
		status = "okay";
		clock-frequency = <40000>;
	};



	fixed-regulators {
		vdd_usb0_5v: regulator@7 {
			/delete-property/ enable-active-high;
			/delete-property/ gpio-open-drain;
		};

		vdd_usb1_5v: regulator@8 {
			/delete-property/ enable-active-high;
			/delete-property/ gpio-open-drain;
		};

		vdd_wlan1_bt: regulator@99 {
			status = "okay";
			gpio = <&tegra_gpio TEGRA_GPIO(N, 3) 0
				&tegra_gpio TEGRA_GPIO(X, 6) 0 >;
		};
		vdd_wlan2: regulator@98 {
			status = "okay";
			gpio = <&tegra_gpio TEGRA_GPIO(X, 4) 0>;
		};

                vdd_usb_hsic_5v: regulator@97 {
                        compatible = "regulator-fixed";
                        reg = <97>;
                        regulator-name = "vdd-usb-hsic-5v";
                        regulator-min-microvolt = <5000000>;
                        regulator-max-microvolt = <5000000>;
                        gpio = <&tegra_gpio TEGRA_GPIO(I, 5) 0>;
                        vin-supply = <&vdd_dummy>;
                };
	};

	pinctrl@3520000 {
		status = "okay";
		pinctrl-0 = <&bali_padctl_default>;
		pinctrl-names = "default";
		vbus-1-supply = <&vdd_usb0_5v>;
		vbus-2-supply = <&vdd_usb1_5v>;
		vbus-3-supply = <&vdd_dummy>;
		vddio-hsic-supply= <&vdd_usb_hsic_5v>;
		bali_padctl_default: pinmux {
			usb2-std-A-port1 {
				nvidia,lanes = "otg-0";
				nvidia,function = "xusb";
				nvidia,port-cap = <TEGRA_PADCTL_PORT_OTG_CAP>;
			};
			usb2-std-A-port2 {
				nvidia,lanes = "otg-1";
				nvidia,function = "xusb";
				nvidia,port-cap = <TEGRA_PADCTL_PORT_HOST_ONLY>;
			};
			usb2-inic {
				nvidia,lanes = "otg-2";
				nvidia,function = "xusb";
				nvidia,port-cap = <TEGRA_PADCTL_PORT_HOST_ONLY>;
			};
			hsic {
				nvidia,lanes = "hsic-0";
				nvidia,function = "hsic";
			};
		};
	};

	bpmp_i2c {
		spmic: spmic@3c {
			pinctrl-names = "default";
			pinctrl-0 = <&spmic_default>;
			spmic_default: pinmux@0 {
				pin_gpio0 { /* USB ID */
					pins = "gpio0";
					function = "gpio";
				};
			};
		};
	};

	external-connection {
		vbus_id_extcon: extcon@1 {
			compatible = "extcon-gpio-states";
			reg = <0x1>;
			extcon-gpio,name = "VBUS";
			/*
			 * Array of gstate,cstate pairs. Each pair shows how to
			 * map GPIO signal values into cable values as defined
			 * by the consumer in question.  Here:
			 *
			 * cstate[x].bit0 -> VBUS cable
			 * cstate[x].bit1 -> nID cable
			 *
			 * For this platform, set cstate to indicate host mode
			 * always. sysfs writes can be performed to change the
			 * mode if needed from userspace.
			 *
			 * Since we don't support VBUS sensing, if gadget mode
			 * is to be setup for cstate, it should be indicated
			 * that VBUS is always available from the connector.
			 *
			 * We will use PMIC GPIO0 here for gstate (which is
			 * NC in this platform) to maintain compatibility
			 * with T186 reference platform.  Irrespective of
			 * PMIC GPIO0 state (extcon driver will probe for GPIO
			 * state during init time and also if GPIO state
			 * changes by monitoring for GPIO interrupt), cstate
			 * will always indicate host mode.
			 */
			extcon-gpio,cable-states = <0x1 0x2
						0x0 0x2>;
			/* PMIC GPIO 0 */
			gpios = <&spmic 0 0>;
			extcon-gpio,out-cable-name-strings = "USB", "USB-Host";
			extcon-gpio,out-cable-names = <EXTCON_USB EXTCON_USB_Host EXTCON_NONE>;
			#extcon-cells = <1>;
		};
	};

	mailbox@3538000 {
		status = "okay";
	};

	xudc@3550000 {
		status = "okay";
		extcon-cables = <&vbus_id_extcon 0>;
		extcon-cable-names = "vbus";
		#extcon-cells = <1>;
		phys = <&tegra_padctl TEGRA_PADCTL_PHY_UTMI_P(0)>;
		phy-names = "usb2";
	};

	xhci@3530000 {
		status = "okay";
		extcon-cables = <&vbus_id_extcon 1>;
		extcon-cable-names = "id";
		#extcon-cells = <1>;
		phys = <&tegra_padctl TEGRA_PADCTL_PHY_UTMI_P(0)>,
			<&tegra_padctl TEGRA_PADCTL_PHY_UTMI_P(1)>,
			<&tegra_padctl TEGRA_PADCTL_PHY_UTMI_P(2)>;
		phy-names = "utmi-0", "utmi-1", "utmi-2";
	};

	pcie-controller@10003000 {
		status = "disabled";
	};

	ahci-sata@3507000 {
		status = "okay";
	};

	sdhci@3460000 { /* SDMMC_D: Used for eMMC */
		status = "okay";
		uhs-mask = <0x00>;
	};

	sdhci@3440000 { /* SDMMC_C  sd card 4-bit*/
		status = "okay";

                nvidia,sd-device;
		/* 79: enable SDR25, SDR50 ... */
                uhs-mask = <0x79>;
                mmc-ocr-mask = <0x0>;
                cap-sdio-irq;
                disable-dynamic-clock-gating;
		vddio_sdmmc-supply = <&vdd_wlan2>;
	};

	sdhci@3400000 { /* SDMMC_A  sd card 4-bit*/
		status = "okay";

                nvidia,sd-device;
		/* 79: enable SDR25, SDR50 ... */
                uhs-mask = <0x79>;
                mmc-ocr-mask = <0x0>;
                cap-sdio-irq;
                disable-dynamic-clock-gating;
		vddio_sdmmc-supply = <&vdd_wlan1_bt>;
	};

	adma@2930000 {
		dma-channels = <10>;
	};

	ahub {
		arad@290e400 {
			status = "okay";
		};
		i2s@2901000 {
			clocks = <&tegra_car TEGRA186_CLK_I2S1>,
				<&tegra_car TEGRA186_CLK_SYNC_I2S1>,
				<&tegra_car TEGRA186_CLK_I2S3_SYNC_INPUT>,
				<&tegra_car TEGRA186_CLK_SYNC_I2S1>;
		};
		i2s@2901400 {
			clocks = <&tegra_car TEGRA186_CLK_I2S5>,
				<&tegra_car TEGRA186_CLK_SYNC_I2S5>,
				<&tegra_car TEGRA186_CLK_I2S3_SYNC_INPUT>,
				<&tegra_car TEGRA186_CLK_SYNC_I2S5>;
		};
		i2s@2901500 {
			clocks = <&tegra_car TEGRA186_CLK_I2S6>,
				<&tegra_car TEGRA186_CLK_SYNC_I2S6>,
				<&tegra_car TEGRA186_CLK_I2S3_SYNC_INPUT>,
				<&tegra_car TEGRA186_CLK_SYNC_I2S6>;
		};
	};

	sound_ref {
		status = "okay";
		compatible = "nvidia,tegra-audio-t186ref-bali";
		nvidia,model = "tegra186-snd-bali";
		nvidia,num-clk = <8>;
		nvidia,clk-rates = < 282240000	/* PLLA_x11025_RATE */
				     11289600	/* AUD_MCLK_x11025_RATE */
				     45158400	/* PLLA_OUT0_x11025_RATE */
				     45158400	/* AHUB_x11025_RATE */
				     245760000  /* PLLA_x8000_RATE */
				     12288000	/* AUD_MCLK_x8000_RATE */
				     245760000	/* PLLA_OUT0_x8000_RATE */
				     49152000 >;/* AHUB_x8000_RATE */
		clocks =<&tegra_car TEGRA186_CLK_PLLP_OUT0>,
			<&tegra_car TEGRA186_CLK_PLLA>,
			<&tegra_car TEGRA186_CLK_PLL_A_OUT0>,
			<&tegra_car TEGRA186_CLK_AHUB>,
			<&tegra_car TEGRA186_CLK_CLK_M>,
			<&tegra_car TEGRA186_CLK_AUD_MCLK>;
		clock-names = "pll_p_out1", "pll_a", "pll_a_out0", "ahub", "clk_m",
			"extern1";
		resets = <&tegra_car TEGRA186_RESET_AUD_MCLK>;
		reset-names = "extern1_rst";
		nvidia,num-codec-link = <5>;
		nvidia,num-amx = <4>;
		nvidia,num-adx = <4>;
		nvidia,amx-slot-size = <64 16 16 64>;
		nvidia,adx-slot-size = <8 32 4 32>;
		nvidia,amx1-slot-map = <
			/* Ent1 */
			TDM_SLOT_MAP(0, 1, 0)
			TDM_SLOT_MAP(0, 1, 1)
			TDM_SLOT_MAP(0, 1, 2)
			TDM_SLOT_MAP(0, 1, 3)
			TDM_SLOT_MAP(0, 2, 0)
			TDM_SLOT_MAP(0, 2, 1)
			TDM_SLOT_MAP(0, 2, 2)
			TDM_SLOT_MAP(0, 2, 3)

			/* Multi-channel */
			TDM_SLOT_MAP(1, 1, 0)
			TDM_SLOT_MAP(1, 1, 1)
			TDM_SLOT_MAP(1, 1, 2)
			TDM_SLOT_MAP(1, 1, 3)
			TDM_SLOT_MAP(1, 2, 0)
			TDM_SLOT_MAP(1, 2, 1)
			TDM_SLOT_MAP(1, 2, 2)
			TDM_SLOT_MAP(1, 2, 3)
			TDM_SLOT_MAP(1, 3, 0)
			TDM_SLOT_MAP(1, 3, 1)
			TDM_SLOT_MAP(1, 3, 2)
			TDM_SLOT_MAP(1, 3, 3)
			TDM_SLOT_MAP(1, 4, 0)
			TDM_SLOT_MAP(1, 4, 1)
			TDM_SLOT_MAP(1, 4, 2)
			TDM_SLOT_MAP(1, 4, 3)
			TDM_SLOT_MAP(1, 5, 0)
			TDM_SLOT_MAP(1, 5, 1)
			TDM_SLOT_MAP(1, 5, 2)
			TDM_SLOT_MAP(1, 5, 3)
			TDM_SLOT_MAP(1, 6, 0)
			TDM_SLOT_MAP(1, 6, 1)
			TDM_SLOT_MAP(1, 6, 2)
			TDM_SLOT_MAP(1, 6, 3)
			TDM_SLOT_MAP(1, 7, 0)
			TDM_SLOT_MAP(1, 7, 1)
			TDM_SLOT_MAP(1, 7, 2)
			TDM_SLOT_MAP(1, 7, 3)
			TDM_SLOT_MAP(1, 8, 0)
			TDM_SLOT_MAP(1, 8, 1)
			TDM_SLOT_MAP(1, 8, 2)
			TDM_SLOT_MAP(1, 8, 3)

			/* MC Down mix */
			TDM_SLOT_MAP(2, 1, 0)
			TDM_SLOT_MAP(2, 1, 1)
			TDM_SLOT_MAP(2, 2, 0)
			TDM_SLOT_MAP(2, 2, 1)

			/* blank */
			TDM_SLOT_MAP(0, 0, 0)
			TDM_SLOT_MAP(0, 0, 0)
			TDM_SLOT_MAP(0, 0, 0)
			TDM_SLOT_MAP(0, 0, 0)

			/* Ent2 */
			TDM_SLOT_MAP(3, 1, 0)
			TDM_SLOT_MAP(3, 1, 1)
			TDM_SLOT_MAP(3, 1, 2)
			TDM_SLOT_MAP(3, 1, 3)
			TDM_SLOT_MAP(3, 2, 0)
			TDM_SLOT_MAP(3, 2, 1)
			TDM_SLOT_MAP(3, 2, 2)
			TDM_SLOT_MAP(3, 2, 3)

			/* blank */
			TDM_SLOT_MAP(0, 0, 0)
			TDM_SLOT_MAP(0, 0, 0)
			TDM_SLOT_MAP(0, 0, 0)
			TDM_SLOT_MAP(0, 0, 0)
			TDM_SLOT_MAP(0, 0, 0)
			TDM_SLOT_MAP(0, 0, 0)
			TDM_SLOT_MAP(0, 0, 0)
			TDM_SLOT_MAP(0, 0, 0)>;

		nvidia,amx2-slot-map = <
			/* CE_Audio */
			TDM_SLOT_MAP(0, 1, 0)
			TDM_SLOT_MAP(0, 1, 1)
			TDM_SLOT_MAP(0, 0, 0)
			TDM_SLOT_MAP(0, 0, 0)

			/* TTS */
			TDM_SLOT_MAP(1, 1, 0)
			TDM_SLOT_MAP(1, 1, 1)
			TDM_SLOT_MAP(0, 0, 0)
			TDM_SLOT_MAP(0, 0, 0)

			/* Touch */
			TDM_SLOT_MAP(2, 1, 0)
			TDM_SLOT_MAP(2, 1, 1)
			TDM_SLOT_MAP(0, 0, 0)
			TDM_SLOT_MAP(0, 0, 0)

			/* Navi */
			TDM_SLOT_MAP(3, 1, 0)
			TDM_SLOT_MAP(3, 1, 1)
			TDM_SLOT_MAP(0, 0, 0)
			TDM_SLOT_MAP(0, 0, 0)>;

		nvidia,amx3-slot-map = <
			/* Ref */
			TDM_SLOT_MAP(0, 1, 0)
			TDM_SLOT_MAP(0, 1, 1)
			TDM_SLOT_MAP(0, 0, 0)
			TDM_SLOT_MAP(0, 0, 0)
			/* Mic1 */
			TDM_SLOT_MAP(0, 2, 0)
			TDM_SLOT_MAP(0, 2, 1)
			TDM_SLOT_MAP(0, 0, 0)
			TDM_SLOT_MAP(0, 0, 0)
			/* Mic2 */
			TDM_SLOT_MAP(0, 3, 0)
			TDM_SLOT_MAP(0, 3, 1)
			TDM_SLOT_MAP(0, 0, 0)
			TDM_SLOT_MAP(0, 0, 0)

			/* Downlink */
			TDM_SLOT_MAP(1, 1, 0)
			TDM_SLOT_MAP(1, 1, 1)
			TDM_SLOT_MAP(0, 0, 0)
			TDM_SLOT_MAP(0, 0, 0)>;

		nvidia,amx4-slot-map = <
			/* bytes 0-7 Ent1 */
			TDM_SLOT_MAP(0, 1, 0)
			TDM_SLOT_MAP(0, 1, 1)
			TDM_SLOT_MAP(0, 1, 2)
			TDM_SLOT_MAP(0, 1, 3)
			TDM_SLOT_MAP(0, 2, 0)
			TDM_SLOT_MAP(0, 2, 1)
			TDM_SLOT_MAP(0, 2, 2)
			TDM_SLOT_MAP(0, 2, 3)

			/* bytes 8-39 multi-channel */
			TDM_SLOT_MAP(0, 3, 0)
			TDM_SLOT_MAP(0, 3, 1)
			TDM_SLOT_MAP(0, 3, 2)
			TDM_SLOT_MAP(0, 3, 3)
			TDM_SLOT_MAP(0, 4, 0)
			TDM_SLOT_MAP(0, 4, 1)
			TDM_SLOT_MAP(0, 4, 2)
			TDM_SLOT_MAP(0, 4, 3)
			TDM_SLOT_MAP(0, 5, 0)
			TDM_SLOT_MAP(0, 5, 1)
			TDM_SLOT_MAP(0, 5, 2)
			TDM_SLOT_MAP(0, 5, 3)
			TDM_SLOT_MAP(0, 6, 0)
			TDM_SLOT_MAP(0, 6, 1)
			TDM_SLOT_MAP(0, 6, 2)
			TDM_SLOT_MAP(0, 6, 3)
			TDM_SLOT_MAP(0, 7, 0)
			TDM_SLOT_MAP(0, 7, 1)
			TDM_SLOT_MAP(0, 7, 2)
			TDM_SLOT_MAP(0, 7, 3)
			TDM_SLOT_MAP(0, 8, 0)
			TDM_SLOT_MAP(0, 8, 1)
			TDM_SLOT_MAP(0, 8, 2)
			TDM_SLOT_MAP(0, 8, 3)
			TDM_SLOT_MAP(0, 9, 0)
			TDM_SLOT_MAP(0, 9, 1)
			TDM_SLOT_MAP(0, 9, 2)
			TDM_SLOT_MAP(0, 9, 3)
			TDM_SLOT_MAP(0, 10, 0)
			TDM_SLOT_MAP(0, 10, 1)
			TDM_SLOT_MAP(0, 10, 2)
			TDM_SLOT_MAP(0, 10, 3)

			/* bytes 40-43 MC down mix */
			TDM_SLOT_MAP(0, 11, 2)
			TDM_SLOT_MAP(0, 11, 3)
			TDM_SLOT_MAP(0, 11, 0)
			TDM_SLOT_MAP(0, 11, 1)

			/* I2S3 is configured for 32 bit data
			   So we need to take care of byte ordering
			   for 16 bit sources */

			/* bytes 46-47 TTS */
			TDM_SLOT_MAP(1, 2, 0)
			TDM_SLOT_MAP(1, 2, 1)

			/* bytes 44-45 CE audio */
			TDM_SLOT_MAP(1, 1, 0)
			TDM_SLOT_MAP(1, 1, 1)

			/* bytes 50-51 Navi */
			TDM_SLOT_MAP(1, 4, 0)
			TDM_SLOT_MAP(1, 4, 1)

			/* bytes 48-49 Touch */
			TDM_SLOT_MAP(1, 3, 0)
			TDM_SLOT_MAP(1, 3, 1)

			/* bytes 52-53 Tel */
			TDM_SLOT_MAP(0, 13, 2)
			TDM_SLOT_MAP(0, 13, 3)

			/* bytes 54-61 Ent2 */
			TDM_SLOT_MAP(2, 1, 0)
			TDM_SLOT_MAP(2, 1, 1)
			TDM_SLOT_MAP(0, 14, 2)
			TDM_SLOT_MAP(0, 14, 3)
			TDM_SLOT_MAP(0, 13, 0)
			TDM_SLOT_MAP(0, 13, 1)
			TDM_SLOT_MAP(0, 0, 0)
			TDM_SLOT_MAP(0, 0, 0)

			/* bytes 62-63 zeros */
			TDM_SLOT_MAP(0, 14, 0)
			TDM_SLOT_MAP(0, 14, 1)>;

		nvidia,adx1-slot-map = <
			TDM_SLOT_MAP(0, 2, 0)
			TDM_SLOT_MAP(0, 2, 1)

			TDM_SLOT_MAP(0, 1, 0)
			TDM_SLOT_MAP(0, 1, 1)

			TDM_SLOT_MAP(0, 0, 0)
			TDM_SLOT_MAP(0, 0, 0)

			TDM_SLOT_MAP(0, 3, 0)
			TDM_SLOT_MAP(0, 3, 1)>;

		nvidia,adx3-slot-map = <
			TDM_SLOT_MAP(0, 1, 0)
			TDM_SLOT_MAP(0, 1, 1)
			TDM_SLOT_MAP(1, 1, 0)
			TDM_SLOT_MAP(1, 1, 1)>;

		nvidia,audio-routing =
			"Headphone-x", "x OUT",
			"x IN", "LineIn-x",
			"Headphone-y", "y OUT",
			"y IN", "LineIn-y",
			"Headphone-d", "d OUT",
			"d IN", "LineIn-d",
			"Headphone-z", "z OUT",
			"z IN", "LineIn-z",
			"Headphone-w", "w OUT",
			"w IN", "LineIn-w";

		nvidia,xbar = <&tegra_axbar>;

		nvidia,dai-link-1 {
			link-name = "bali-audio-dsp-tdm1-1";
			cpu-dai = <&tegra_i2s3>;
			codec-dai = <&spdif_dit0>;
			cpu-dai-name = "I2S3";
			codec-dai-name = "dit-hifi";
			tx-mask = <0xFFFF>;
			rx-mask = <0xFFFF>;
			format = "dsp_b";
			bitclock-master;
			frame-master;
			bitclock-inversion;
			frame-inversion;
			bit-format = "s32_le";
			bclk_ratio = <1>;
			srate = <48000>;
			num-channel = <16>;
			name-prefix = "x";
		};

		nvidia,dai-link-2 {
			link-name = "bali-audio-dsp-tdm1-2";
			cpu-dai = <&tegra_i2s1>;
			codec-dai = <&spdif_dit1>;
			cpu-dai-name = "I2S1";
			codec-dai-name = "dit-hifi";
			tx-mask = <0xFFFF>;
			rx-mask = <0xFFFF>;
			format = "dsp_b";
			bitclock-slave;
			frame-slave;
			bitclock-inversion;
			frame-inversion;
			bit-format = "s32_le";
			bclk_ratio = <1>;
			srate = <48000>;
			num-channel = <16>;
			name-prefix = "y";
		};

		nvidia,dai-link-3 {
			link-name = "bt-playback";
			cpu-dai = <&tegra_i2s2>;
			codec-dai = <&spdif_dit2>;
			cpu-dai-name = "I2S2";
			codec-dai-name = "dit-hifi";
			tx-mask = <0x1>;
			rx-mask = <0x1>;
			format = "dsp_a";
			bitclock-master;
			frame-master;
			bitclock-inversion;
			frame-inversion;
			bit-format = "s16_le";
			bclk_ratio = <8>;
			srate = <16000>;
			num-channel = <1>;
			name-prefix = "d";
		};

		nvidia,dai-link-4 {
			link-name = "bali-avb-dummy-1";
			cpu-dai = <&tegra_i2s5>;
			codec-dai = <&spdif_dit3>;
			cpu-dai-name = "I2S5";
			codec-dai-name = "dit-hifi";
			format = "i2s";
			bitclock-slave;
			frame-slave;
			bit-format = "s32_le";
			bclk_ratio = <8>;
			srate = <48000>;
			num-channel = <2>;
			name-prefix = "z";
		};


		nvidia,dai-link-5 {
			link-name = "bali-avb-dummy-2";
			cpu-dai = <&tegra_i2s6>;
			codec-dai = <&spdif_dit4>;
			cpu-dai-name = "I2S6";
			codec-dai-name = "dit-hifi";
			format = "i2s";
			bitclock-slave;
			frame-slave;
			bit-format = "s32_le";
			bclk_ratio = <8>;
			srate = <48000>;
			num-channel = <2>;
			name-prefix = "w";
		};
	};

	adsp_audio {
		compr-ops = <0>;
		status = "okay";
		num-plugin = <3>;
		plugin-info-1 {
			plugin-name = "reverb";
			firmware-name = "libnvreverbfx.elf";
			widget-name = "REVERB";
			param-type = <2>; /* SNDRV_CTL_ELEM_TYPE_INTEGER */
		};
		plugin-info-2 {
			plugin-name = "wire";
			firmware-name = "libnvwirefx.elf";
			widget-name = "WIRE";
		};
		plugin-info-3 {
			plugin-name = "ssewrapper";
			firmware-name = "libnvssewrapperfx.elf";
			widget-name = "SSEWRAPPER";
		};
	};

	mttcan@c310000 {
		status = "disabled";
	};

	mttcan@c320000 {
		status = "disabled";
	};

	isc-mgr.0 {
		compatible = "nvidia,isc-mgr";
		i2c-bus = <7>;
		csi-port = <0>;
		interrupt-parent = <&tegra_gpio>;
		interrupts = <TEGRA_GPIO(S, 4) 2>;
		status = "okay";
	};

	isc-mgr.1 {
		compatible = "nvidia,isc-mgr";
		i2c-bus = <7>;
		csi-port = <2>;
		status = "okay";
	};

	isc-mgr.2 {
		compatible = "nvidia,isc-mgr";
		i2c-bus = <7>;
		csi-port = <4>;
		status = "okay";
	};

	arm-pmu {
		status = "okay";
	};

	cpus {
		status = "disabled";
	};

	bthrot_cdev {
		gpu_balanced {
			throttle_table = <
				1705000	1551000	932000	4294967295
				1683701	1532070	917931	4294967295
				1662403	1513141	903862	4294967295
				1641104	1494212	889794	4294967295
				1619806	1475283	875725	4294967295
				1598507	1456353	861656	4294967295
				1577209	1437424	847588	4294967295
				1555910	1418495	833519	4294967295
				1534612	1399566	819450	4294967295
				1513313	1380636	805382	4294967295
				1492015	1361707	791313	4294967295
				1470716	1342778	777245	4294967295
				1449418	1323849	763176	4294967295
				1428120	1304920	749107	4294967295
				1406821	1285990	735039	4294967295
				1385523	1267061	720970	4294967295
				1364224	1248132	706901	4294967295
				1342926	1229203	692833	4294967295
				1321627	1210273	678764	4294967295
				1300329	1191344	664696	4294967295
				1279030	1172415	650627	4294967295
				1257732	1153486	636558	4294967295
				1236433	1134556	622490	4294967295
				1215135	1115627	608421	4294967295
				1193836	1096698	594352	4294967295
				1172538	1077769	580284	4294967295
				1151240	1058840	566215	4294967295
				1129941	1039910	552147	4294967295
				1108643	1020981	538078	4294967295
				1087344	1002052	524009	4294967295
				1066046	983123	509941	4294967295
				1044747	964193	495872	4294967295
				1023449	945264	481803	4294967295
				1002150	926335	467735	4294967295
				980852	907406	453666	4294967295
				959553	888476	439598	4294967295
				938255	869547	425529	4294967295
				916956	850618	411460	4294967295
				895658	831689	397392	4294967295
				874360	812760	383323	4294967295
				853061	793830	369254	4294967295
				831763	774901	355186	4294967295
				810464	755972	341117	4294967295
				789166	737043	327049	4294967295
				767867	718113	312980	4294967295
				746569	699184	298911	4294967295
				725270	680255	284843	4294967295
				703972	661326	270774	4294967295
				682673	642396	256705	4294967295
				661375	623467	242637	4294967295
				640076	604538	228568	4294967295
				618778	585609	214500	4294967295
			>;
		};
		cpu_balanced {
			throttle_table = <
				1705000	1551000	4294967295	4294967295
				1683701	1532070	4294967295	4294967295
				1662403	1513141	4294967295	4294967295
				1641104	1494212	4294967295	4294967295
				1619806	1475283	4294967295	4294967295
				1598507	1456353	4294967295	4294967295
				1577209	1437424	4294967295	4294967295
				1555910	1418495	4294967295	4294967295
				1534612	1399566	4294967295	4294967295
				1513313	1380636	4294967295	4294967295
				1492015	1361707	1007000	4294967295
				1470716	1342778	992590	4294967295
				1449418	1323849	978181	4294967295
				1428120	1304920	963772	4294967295
				1406821	1285990	949363	4294967295
				1385523	1267061	934954	4294967295
				1364224	1248132	920545	4294967295
				1342926	1229203	906136	4294967295
				1321627	1210273	891727	4294967295
				1300329	1191344	877318	4294967295
				1279030	1172415	862909	4294967295
				1257732	1153486	848500	4294967295
				1236433	1134556	834090	4294967295
				1215135	1115627	819681	4294967295
				1193836	1096698	805272	4294967295
				1172538	1077769	790863	4294967295
				1151240	1058840	776454	4294967295
				1129941	1039910	762045	4294967295
				1108643	1020981	747636	4294967295
				1087344	1002052	733227	4294967295
				1066046	983123	718818	4294967295
				1044747	964193	704409	4294967295
				1023449	945264	690000	4294967295
				1002150	926335	675590	4294967295
				980852	907406	661181	4294967295
				959553	888476	646772	4294967295
				938255	869547	632363	4294967295
				916956	850618	617954	4294967295
				895658	831689	603545	4294967295
				874360	812760	589136	4294967295
				853061	793830	574727	4294967295
				831763	774901	560318	4294967295
				810464	755972	545909	4294967295
				789166	737043	531500	4294967295
				767867	718113	517090	4294967295
				746569	699184	502681	4294967295
				725270	680255	488272	4294967295
				703972	661326	473863	4294967295
				682673	642396	459454	4294967295
				661375	623467	445045	4294967295
				640076	604538	430636	4294967295
				618778	585609	416227	4294967295
				597480	566680	401818	4294967295
				576181	547750	387409	4294967295
				554883	528821	373000	4294967295
				533584	509892	358590	4294967295
				512286	490963	344181	4294967295
				490987	472033	329772	4294967295
				469689	453104	315363	4294967295
				448390	434175	300954	4294967295
				427092	415246	286545	4294967295
				405793	396316	272136	4294967295
				384495	377387	257727	4294967295
				363196	358458	243318	4294967295
				341898	339529	228909	4294967295
				320600	320600	214500	4294967295
			>;
		};
	};


	thermal-zones {
		Tboard_tegra {
			status = "disabled";
		};

		BCPU-therm {
			trips {
				trip_bthrot {
					temperature = <127000>; /*<88500>;*/
				};
			};
		};

		MCPU-therm {
			trips {
				trip_bthrot {
					temperature = <127000>; /*<88500>;*/
				};
			};
		};

		AO-therm {
			trips {
				trip_bthrot {
					temperature = <127000>; /*<89500>;*/
				};
			};
		};
	};

        ptm_a57_0: ptm@9840000 {
                status = "okay";
        };

        ptm_a57_1: ptm@9940000 {
                status = "okay";
        };

        ptm_a57_2: ptm@9a40000 {
                status = "okay";
        };

        ptm_a57_3: ptm@9b40000 {
                status = "okay";
        };

        funnel_bccplex@9010000 {
                status = "okay";
        };

        funnel_major@8010000 {
                status = "okay";
        };

        replicator@0x8040000 {
                status = "okay";
        };

        etf@8030000 {
                status = "okay";
        };

        tpiu@8060000 {
                status = "okay";
        };

	pmc-iopower {
		status = "disabled";
	};

	cpus {
		status = "disabled";

	};

	bluedroid_pm {
		status = "disabled";
	};

	bcmdhd_pcie_wlan {
		status = "disabled";
	};
};

